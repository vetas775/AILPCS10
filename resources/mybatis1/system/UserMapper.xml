<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
    <cache/>
    <resultMap id="BaseResultMap" type="User" >
		<id column="USER_ID" property="userId" jdbcType="VARCHAR"/>
		<result column="USERNAME" property="userName" jdbcType="VARCHAR"/>
		<result column="PASSWORD" property="userPassword" jdbcType="VARCHAR"/>
		<result column="NAME" property="userRealName" jdbcType="VARCHAR"/>
		<result column="USER_RIGHTS" property="userRights" jdbcType="VARCHAR"/>
		<result column="ROLE_ID" property="userRoleId" jdbcType="VARCHAR"/>
		<result column="LAST_LOGIN" property="userLastLogin" jdbcType="VARCHAR"/>
		<result column="IP" property="userLastIp" jdbcType="VARCHAR"/>
		<result column="STATUS" property="userStatus" jdbcType="VARCHAR"/>
		<result column="BZ" property="userRemark" jdbcType="VARCHAR"/>
		<result column="SKIN" property="userSkin" jdbcType="VARCHAR"/>
		<result column="EMAIL" property="userEmail" jdbcType="VARCHAR"/>
		<result column="NUMBER" property="userSerialNo" jdbcType="VARCHAR"/>
		<result column="PHONE" property="userPhone" jdbcType="VARCHAR"/>

		<association column="ROLE_ID" property="role" javaType="Role">
			<id column="ROLE_ID" property="roleId" jdbcType="VARCHAR"/>
			<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
			<result column="ROLE_RIGHTS" property="roleRights" jdbcType="VARCHAR"/>
			<result column="PARENT_ID" property="parentId" jdbcType="VARCHAR"/>
			<result column="ADD_QX" property="addQx" jdbcType="VARCHAR"/>
			<result column="DEL_QX" property="delQx" jdbcType="VARCHAR"/>
			<result column="EDIT_QX" property="editQx" jdbcType="VARCHAR"/>
			<result column="CHA_QX" property="chaQx" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	
	<!--sys_user 字段 -->
	<sql id="UserField">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE
	</sql>
	
	<!--sys_user 字段值 -->
	<sql id="UserFieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{SKIN},
		#{EMAIL},
		#{NUMBER},
		#{PHONE}
	</sql>
	
	<sql id="Condition_list">
  	<where>
  	    <if test = "userName != null and userPassword != null"> <!-- 判断用户名和密码并返回 用户信息-->
		and a.USERNAME = #{userName} and a.PASSWORD = #{userPassword}
		</if>
		<if test = "userName != null and userPassword == null ">  <!-- 根据userName获取用户信息 -->
		and a.USERNAME = #{userName}
		</if>
		<if test = "userId != null and userId > 0">  <!-- 根据userId获取用户信息 -->
		and a.USER_ID = #{userId}
		</if>
		<if test = "userEmail != null ">  <!-- 根据邮箱获取用户信息 -->
		and a.EMAIL = #{userEmail}
		</if>
		<if test = "userSerialNo != null ">  <!-- 根据编号获取用户信息 -->
		and a.NUMBER = #{userSerialNo}
		</if>	
  	</where>
    </sql>
			
	<!-- 获取用户及角色信息 -->
	<select id="getUserInfo" parameterType="User" resultMap="BaseResultMap">
		select a.USER_ID, a.USERNAME, a.PASSWORD, a.NAME, a.RIGHTS as USER_RIGHTS, a.ROLE_ID, 
		    a.LAST_LOGIN, a.IP, a.STATUS, a.BZ, a.SKIN, a.EMAIL, a.NUMBER, a.PHONE,
		    b.ROLE_NAME, b.RIGHTS as ROLE_RIGHTS, b.PARENT_ID, b.ADD_QX, b.DEL_QX,
		    b.EDIT_QX, b.CHA_QX    
		from sys_user a left join sys_role b on a.ROLE_ID = b.ROLE_ID 
		<include refid="Condition_list"/>
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="String" resultType="pd" >
		select 
			<include refid="UserField"></include>
		from sys_user
		where 
			USERNAME = #{USERNAME}
	</select>
	
	<!-- 更新最后登录时间 -->
	<update id="updateLastLogin" parameterType="User" >
		update sys_user set LAST_LOGIN = #{userLastLogin}, IP = #{userLastIp} 
		where USER_ID = #{userId}
	</update>
	
	<!-- 通过用户ID获取用户信息和角色信息 
	<select id="getUserAndRoleById" parameterType="String" resultMap="userAndRoleResultMap">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.NAME,
				u.RIGHTS as USER_RIGHTS,
				u.SKIN,
				r.ROLE_ID,
				r.ROLE_NAME,
				r.RIGHTS as ROLE_RIGHTS 
		from sys_user u 
		left join sys_role r 
		on u.ROLE_ID=r.ROLE_ID 
		where u.STATUS=0 
		and u.USER_ID=#{USER_ID}
	</select>
	-->
	
	<!-- 列出某角色下的所有用户 -->
	<select id="listAllUserByRoldId"  parameterType="pd" resultType="pd" >
		select 
		from sys_user
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 返回拥有指定角色的用户数 -->
	<select id="countUserByRoldId"  parameterType="String" resultType="int" >
		select count(1)	from sys_user where	ROLE_ID = #{roleId}
	</select>
	
	<!-- 用户列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from sys_user u, sys_role r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN <![CDATA[>=]]> #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN <![CDATA[<=]]> #{pd.lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 用户列表(弹窗选择用) -->
	<select id="userBystafflistPage" parameterType="page" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from sys_user u, sys_role r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
		</if>
		and u.USERNAME not in (select s.USER_ID from OA_STAFF s where s.USER_ID !='')
		order by u.LAST_LOGIN desc
	</select>
	
	
	
	<!-- 新增用户 -->
	<insert id="saveUser" parameterType="pd" >
		insert into sys_user (
			<include refid="UserField"></include>
		) values (
			<include refid="UserFieldValue"></include>
		)
	</insert>
	
	<!-- 修改 -->
	<update id="editUser" parameterType="pd" >
		update  sys_user
			set NAME 					= #{NAME},
				ROLE_ID 				= #{ROLE_ID},
				BZ						= #{BZ},
				EMAIL					= #{EMAIL},
				NUMBER					= #{NUMBER},
				PHONE					= #{PHONE}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="pd" flushCache="false">
		delete from sys_user
		where USER_ID <![CDATA[<>]]> '1'
		  and USER_ID = #{USER_ID}
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteBatchUser" parameterType="String" >
		delete from sys_user
		where USER_ID <![CDATA[<>]]> '1'
		  and USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from sys_user u, sys_role r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USER_ID <![CDATA[<>]]> '1'
		and r.PARENT_ID = '1'
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE "%"#{keywords}"%"
					 or 
					 u.EMAIL LIKE "%"#{keywords}"%"
					 or
					 u.NUMBER LIKE "%"#{keywords}"%"
					 or
					 u.NAME LIKE "%"#{keywords}"%"
					 or
					 u.PHONE LIKE "%"#{keywords}"%"
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 获取用户总数 -->
	<select id="getUserCount" parameterType="String" resultType="Integer">
		select count(1) userCount from sys_user
	</select>
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByUserEmail" parameterType="pd" resultType="pd" >
		select 
			<include refid="UserField"></include>
		from sys_user
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过用户编号获取数据 -->
	<select id="findByUserNumber" parameterType="pd" resultType="pd" >
		select 
			<include refid="UserField"></include>
		from sys_user
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过user_id获取数据 -->
	<select id="findByUserId" parameterType="pd" resultType="pd" >
		select 
			<include refid="UserField"></include>
		from sys_user
		where USER_ID = #{USER_ID}
	</select>
</mapper>